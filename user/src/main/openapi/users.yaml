openapi: 3.0.3

info:
  title: Cosmo Tech User Manager API
  description: Cosmo Tech User Manager API
  version: 1.0.0

servers:
- url: 'http://localhost:8080'

security:
- ApiKeyAuth: [ ]
- AADOAuth2AuthCode: [ ]

tags:
- name: user
  description: User Management

paths:
  /users:
    post:
      operationId: registerUser
      tags:
        - user
      summary: Register a new user
      requestBody:
        description: the User to register
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              BobCreateIn:
                $ref: '#/components/examples/BobCreateIn'
      responses:
        "201":
          description: the user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Bob:
                  $ref: '#/components/examples/BobCreate'
        "400":
          description: Bad request
    get:
      operationId: findAllUsers
      tags:
        - user
      summary: List all Users
      responses:
        "200":
          description: the user details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              examples:
                Two:
                  $ref: '#/components/examples/TwoUsers'

  /users/{user_id}:
    parameters:
      - name: user_id
        in: path
        description: the User identifier
        required: true
        schema:
          type: string
    get:
      operationId: findUserById
      tags:
        - user
      summary: Get the details of an user
      responses:
        "200":
          description: the User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Bob:
                  $ref: '#/components/examples/Bob'
        "404":
          description: the User specified is unknown or you don't have access to it
    patch:
      operationId: updateUser
      tags:
        - user
      summary: Update an user
      requestBody:
        description: the new User details. Organization membership is handled in Organzation service.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              BobyUpdate:
                $ref: '#/components/examples/BobyUpdate'
      responses:
        "200":
          description: the user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                BobyUpdate:
                  $ref: '#/components/examples/BobyUpdate'
        "400":
          description: Bad request
        "404":
          description: the User specified is unknown or you don't have access to it
    delete:
      operationId: unregisterUser
      tags:
        - user
      summary: Unregister an user
      responses:
        "200":
          description: the user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Bob:
                  $ref: '#/components/examples/Bob'
        "400":
          description: Bad request
        "404":
          description: the User specified is unknown or you don't have access to it

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: The Cosmo Tech API Key
      name: key
      in: query
    AADOAuth2AuthCode:
      type: oauth2
      description: Azure Active Directory authentication
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/e9641c78-d0d6-4d09-af63-168922724e7f/oauth2/v2.0/authorize
          scopes:
            http://sample.azure.cosmo-platform.com/user_impersonation: User Impersonation
  schemas:
    User:
      type: object
      description: a User
      properties:
        id:
          type: string
          description: the User unique identifier
        name:
          type: string
          description: the User name
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/UserOrganization'
    UserOrganization:
      type: object
      description: The organization of the user
      properties:
        id:
          type: string
          description: the Organization id
        name:
          type: string
          description: the Organization name
  examples:
    BobCreateIn:
      summary: Bob User Create
      description: Bob User Create example
      value:
        name: Bob
    BobCreate:
      summary: Bob User Create
      description: Bob User Create example
      value:
        id: "1"
        name: Bob
    Bob:
      summary: Bob User
      description: Bob User example
      value:
        id: "1"
        name: Bob
        organizations:
          - id: "1"
            name: Cosmo Tech
          - id: "2"
            name: Phoenix
    BobyUpdate:
      summary: Boby update User
      description: Bob User renamed to Boby example
      value:
        id: "1"
        name: Boby
    TwoUsers:
      summary: Two Users
      description: Two Users example
      value:
        - id: "1"
          name: Bob
          organizations:
            - id: "1"
              name: Cosmo Tech
            - id: "2"
              name: Phoenix
        - id: "2"
          name: Alice
          organizations:
            - id: "2"
              name: Phoenix
