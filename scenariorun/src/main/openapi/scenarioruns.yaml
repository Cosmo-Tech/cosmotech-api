openapi: 3.0.3

info:
  title: Cosmo Tech ScenarioRun Manager API
  description: Cosmo Tech ScenarioRun Manager API
  version: 1.0.0

servers:
- url: 'https://api.azure.cosmo-platform.com'
- url: 'http://localhost:4010'

security:
- oAuth2AuthCode: [ ]

tags:
- name: scenariorun
  description: ScenarioRun Management

paths:
  /organizations/{organization_id}/scenarioruns/search:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    post:
      operationId: searchScenarioRuns
      tags:
        - scenariorun
      summary: Search ScenarioRuns
      requestBody:
        description: the ScenarioRun search parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioRunSearch'
            examples:
              BrewerySearch:
                $ref: '#/components/examples/BrewerySearch'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              BrewerySearch:
                $ref: '#/components/examples/BrewerySearch'
      responses:
        "200":
          description: the scenariorun details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioRun'
              examples:
                OneScenarioRun:
                  $ref: '#/components/examples/OneScenarioRun'
  /organizations/{organization_id}/scenarioruns/startcontainers:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    post:
      operationId: startScenarioRunContainers
      tags:
        - scenariorun
      summary: Start a new scenariorun with raw containers definition
      requestBody:
        description: the raw containers definition
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioRunStartContainers'
            examples:
              ScenarioRunStartContainers:
                $ref: '#/components/examples/BreweryScenarioRunStartContainers'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              ScenarioRunStartContainers:
                $ref: '#/components/examples/BreweryScenarioRunStartContainers'
      responses:
        "202":
          description: the scenariorun details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioRun'
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRunContainer'
        "400":
          description: Bad request
        "404":
          description: the Scenario specified is unknown or you don't have access to it
  /organizations/{organization_id}/scenarioruns/{scenariorun_id}:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: scenariorun_id
        in: path
        description: the ScenarioRun identifier
        required: true
        schema:
          type: string
    get:
      operationId: findScenarioRunById
      tags:
        - scenariorun
      summary: Get the details of a scenariorun
      responses:
        "200":
          description: the ScenarioRun details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioRun'
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRun'
        "404":
          description: the ScenarioRun specified is unknown or you don't have access to it
    delete:
      operationId: deleteScenarioRun
      tags:
        - scenariorun
      summary: Delete a scenariorun
      responses:
        "204":
          description: Request succeeded
        "400":
          description: Bad request
        "404":
          description: the ScenarioRun specified is unknown or you don't have access to it
  /organizations/{organization_id}/scenarioruns/{scenariorun_id}/logs:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: scenariorun_id
        in: path
        description: the ScenarioRun identifier
        required: true
        schema:
          type: string
    get:
      operationId: getScenarioRunLogs
      tags:
        - scenariorun
      summary: get the logs for the ScenarioRun
      responses:
        "200":
          description: the scenariorun logs details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioRunLogs'
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRunLogs'
  /organizations/{organization_id}/scenarioruns/{scenariorun_id}/cumulatedlogs:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: scenariorun_id
        in: path
        description: the ScenarioRun identifier
        required: true
        schema:
          type: string
    get:
      operationId: getScenarioRunCumulatedLogs
      tags:
        - scenariorun
      summary: Get the cumulated logs of a scenariorun
      responses:
        "200":
          description: the ScenarioRun cumulated logs
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: Bad request
        "404":
          description: the ScenarioRun specified is unknown or you don't have access to it
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarioruns:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: workspace_id
        in: path
        description: the Workspace identifier
        required: true
        schema:
          type: string
    get:
      operationId: getWorkspaceScenarioRuns
      tags:
        - scenariorun
      summary: get the list of ScenarioRuns for the Workspace
      responses:
        "200":
          description: the scenariorun details list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioRun'
              examples:
                OneScenarioRun:
                  $ref: '#/components/examples/OneScenarioRun'
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}/scenarioruns:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: workspace_id
        in: path
        description: the Workspace identifier
        required: true
        schema:
          type: string
      - name: scenario_id
        in: path
        description: the Scenario identifier
        required: true
        schema:
          type: string
    get:
      operationId: getScenarioRuns
      tags:
        - scenariorun
      summary: get the list of ScenarioRuns for the Scenario
      responses:
        "200":
          description: the scenariorun details list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioRun'
              examples:
                OneScenarioRun:
                  $ref: '#/components/examples/OneScenarioRun'
  /organizations/{organization_id}/workspaces/{workspace_id}/scenarios/{scenario_id}/run:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: workspace_id
        in: path
        description: the Workspace identifier
        required: true
        schema:
          type: string
      - name: scenario_id
        in: path
        description: the Scenario identifier
        required: true
        schema:
          type: string
    post:
      operationId: runScenario
      tags:
        - scenariorun
      summary: run a ScenarioRun for the Scenario
      responses:
        "200":
          description: the scenariorun details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioRun'
              examples:
                ScenarioRun:
                  $ref: '#/components/examples/BreweryScenarioRun'
components:
  securitySchemes:
    oAuth2AuthCode:
      type: oauth2
      description: OAuth2 authentication
      flows:
        implicit:
          authorizationUrl: oauth2/authorize
          scopes: {}
  schemas:
    ScenarioRunSearch:
      type: object
      description: the search options
      properties:
        solutionId:
          type: string
          description: the Solution Id to search
        runTemplateId:
          type: string
          description: the Solution Analysis Id to search
        workspaceId:
          type: string
          description: the Workspace Id to search
        scenarioId:
          type: string
          description: the Scenario Id to search
        state:
          type: string
          description: the state to search
          enum: ["FetchingDatasets","FetchingScenarioParameters","ApplyingScenarioParameters","ValidatingScenarioData","SendingScenarioDataToDataWarehouse","PreRun","Running","PostRun","Success","Failed"]
        workflowId:
          type: string
          description: the Cosmo Tech compute cluster Argo Workflow Id to search
        workflowName:
          type: string
          description: the Cosmo Tech compute cluster Argo Workflow Name
        ownerId:
          type: string
          description: the owner Id to search
    ScenarioRunStartContainers:
      type: object
      description: the parameters to run directly containers
      properties:
        generateName:
          type: string
          description: the base name for workflow name generation
        nodeLabel:
          type: string
          description: the node label request
        containers:
          type: array
          description: the containers map with name and ScenarioRunContainer
          items:
            $ref: '#/components/schemas/ScenarioRunContainer'
      required:
        - containers
    ScenarioRun:
      type: object
      description: a ScenarioRun with only base properties
      properties:
        id:
          type: string
          readOnly: true
          description: the ScenarioRun
        workflowId:
          type: string
          description: the Cosmo Tech compute cluster Argo Workflow Id to search
        workflowName:
          type: string
          description: the Cosmo Tech compute cluster Argo Workflow Name
        ownerId:
          type: string
          readOnly: true
          description: the user id which own this scenariorun
        workspaceId:
          type: string
          readOnly: true
          description: the Workspace Id
        workspaceName:
          type: string
          readOnly: true
          description: the Workspace name
        scenarioId:
          type: string
          readOnly: true
          description: the Scenario Id
        scenarioName:
          type: string
          readOnly: true
          description: the Scenario name
        solutionId:
          type: string
          readOnly: true
          description: the Solution Id
        solutionName:
          type: string
          readOnly: true
          description: the Solution name
        solutionVersion:
          type: string
          readOnly: true
          description: the Solution version
        runTemplateId:
          type: string
          readOnly: true
          description: the Solution Run Template id
        runTemplateName:
          type: string
          readOnly: true
          description: the Run Template name
        computeSize:
          type: string
          readOnly: true
          description: the compute size needed for this Analysis. Standard sizes are basic and highcpu. Default is basic
        state:
          type: string
          readOnly: true
          description: the ScenarioRun state
          enum: ["FetchingDatasets","FetchingScenarioParameters","ApplyingScenarioParameters","ValidatingScenarioData","SendingScenarioDataToDataWarehouse","PreRun","Running","PostRun","Success","Failed"]
        failedStep:
          type: string
          readOnly: true
          description: the failed step if state is Failed
        failedContainerId:
          type: string
          readOnly: true
          description: the failed container Id if state is Failed
        startTime:
          type: string
          readOnly: true
          description: the ScenarioRun start Date Time
        endTime:
          type: string
          readOnly: true
          description: the ScenarioRun end Date Time
        datasetList:
          type: array
          readOnly: true
          description: the list of Dataset Id associated to this Analysis
          items:
            type: string
        parametersValues:
          type: array
          readOnly: true
          description: the list of Run Template parameters values
          items:
            $ref: '#/components/schemas/RunTemplateParameterValue'
        sendInputToDataWarehouse:
          type: boolean
          readOnly: true
          description: whether or not the Dataset values and the input parameters values are send to the DataWarehouse prior to ScenarioRun Run
        dataWarehouseDB:
          type: string
          description: the DataWarehouse database name to send data if sendInputToDataWarehouse is set
        resultsEventBusResourceUri:
          type: string
          description: the event bus which receive Workspace ScenarioRun results messages. Message won't be send if this is not set
        scenariorunEventBusResourceUri:
          type: string
          description: the event bus which receive Workspace ScenarioRun events messages. Message won't be send if this is not set
        nodeLabel:
          type: string
          readOnly: true
          description: the node label request
        fetchDatasetContainers:
          type: array
          readOnly: true
          description: the containers which fetch the Scenario Datasets
          items:
            $ref: '#/components/schemas/ScenarioRunContainer'
        fetchScenarioParametersContainer:
          readOnly: true
          description: the container which fetch the Scenario Parameters
          $ref: '#/components/schemas/ScenarioRunContainer'
        applyParametersContainer:
          readOnly: true
          description: the container which apply the Scenario Parameters
          $ref: '#/components/schemas/ScenarioRunContainer'
        validateDataContainer:
          readOnly: true
          description: the container which validate the Scenario data
          $ref: '#/components/schemas/ScenarioRunContainer'
        sendDataWarehouseContainer:
          readOnly: true
          description: the container which send data to the Data Warehouse
          $ref: '#/components/schemas/ScenarioRunContainer'
        preRunContainer:
          readOnly: true
          description: the container which execute the pre-run
          $ref: '#/components/schemas/ScenarioRunContainer'
        runContainer:
          readOnly: true
          description: the main run container which execute the engine
          $ref: '#/components/schemas/ScenarioRunContainer'
        postRunContainer:
          readOnly: true
          description: the container which execute the post-run
          $ref: '#/components/schemas/ScenarioRunContainer'
    RunTemplateParameterValue:
      type: object
      description: the value of Analysis parameter for a Scenario for this ScenarioRun
      properties:
        parameterId:
          type: string
          description: the parameter Id
        varType:
          type: string
          readOnly: true
          description: the parameter value type
        value:
          type: string
          description: the parameter value
      required:
        - parameterId
        - value
    ScenarioRunContainer:
      type: object
      description: a ScenarioRun container description
      properties:
        id:
          type: string
          readOnly: true
          description: the container Id
        name:
          type: string
          description: the container name
        envVars:
          type: object
          description: environment variable map
          additionalProperties:
            type: string
        image:
          type: string
          description: the container image URI
        entrypoint:
          type: string
          description: the container entry point
        runArgs:
          type: array
          description: the list of run arguments for the container
          items:
            type: string
        dependencies:
          type: array
          description: the list of dependencies container name to run this container
          items:
            type: string
      required:
        - name
        - image
    ScenarioRunLogs:
      type: object
      description: the scenariorun logs returned by all containers
      properties:
        scenariorunId:
          type: string
          readOnly: true
          description: the ScenarioRun Id
        containers:
          type: object
          readOnly: true
          description: the container map of logs
          additionalProperties:
            $ref: '#/components/schemas/ScenarioRunContainerLogs'
    ScenarioRunContainerLogs:
      type: object
      description: logs for a given container
      properties:
        nodeId:
          type: string
          readOnly: true
          description: the node Id which has executed this log
        containerName:
          type: string
          readOnly: true
          description: the container name
        children:
          type: array
          readOnly: true
          description: the list of children node id
          items:
            type: string
        logs:
          type: string
          readOnly: true
          description: the node logs in plain text
  examples:
    BreweryScenarioRun:
      summary: Brewery ScenarioRun example
      description: Brewery ScenarioRun example
      value:
        id: "1"
        workflowId: "1"
        workflowName: "w1"
        ownerId: "1"
        workspaceId: "1"
        workspaceName: Brewery Analysis
        scenarioId: "1"
        scenarioName: Brewery Master Analysis
        solutionId: "1"
        solutionName: Brewery Solution
        solutionVersion: "1.0.0"
        runTemplateId: hundred
        runTemplateName: Full scenariorun 100 steps
        computeSize: highcpu
        parametersHandler: run_templates/hundred/parameters_handler/
        datasetValidator: run_templates/hundred/validator/
        engine: run_templates/hundred/engine/
        datasetList:
          - "1"
        parametersValues:
          - parameterId: prefix
            varType: string
            value: new
        sendInputToDataWarehouse: true
        dataWarehouseDB: Brewery
        resultsEventBusResourceUri: brewery
        scenariorunEventBusResourceUri: brewery-scenariorun
        state: Running
        startTime: 4/15/2021, 10:52:18.593 AM
        nodeLabel: highcpupool
        fetchDatasetContainers:
          - id: azertyuiop
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
              ADT_QUERY: SELECT * FROM digitaltwins
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
            name: fetchDatasetContainers
        fetchScenarioParametersContainer:
          id: aqwzsx
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_SCENARIO_ID: "1"
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
          image: csmphoenix.azurecr.io/cosmotech-scenario-parameters-loader:latest
        applyParametersContainer:
          id: yhnujki
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_PARAMETERS_HANDLER_PROVIDER: local
            CSM_PARAMETERS_HANDLER_PATH: run_templates/hundred/parameters_handler/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_RUN_TEMPLATE_ID: hundred
            CSM_CONTAINER_MODE: handle-parameters
          image: twinengines.azurecr.io/brewery_simulator:latest
          entrypoint: entrypoint.py
        validateDataContainer:
          id: rfvtgb
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_VALIDATOR_PROVIDER: local
            CSM_DATASET_VALIDATOR_PATH: run_templates/hundred/validator/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_CONTAINER_MODE: validate
          image: twinengines.azurecr.io/brewery_simulator:latest
          entrypoint: entrypoint.py
        sendDataWarehouseContainer:
          id: qsdfghjklm
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
            CSM_SEND_DATAWAREHOUSE_DATASETS: true
            ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
            ADX_DATABASE: Brewery
          image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
        runContainer:
          id: wxcvbn
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_ENGINE_PROVIDER: local
            CSM_ENGINE_PATH: run_templates/hundred/engine/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
            CSM_PROBES_MEASURES_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery
            CSM_CONTAINER_MODE: engine
            CSM_SIMULATION: DeployedScenarioRun
          image: twinengines.azurecr.io/brewery_simulator:latest
          entrypoint: entrypoint.py
    BreweryScenarioRunSolution:
      summary: Brewery ScenarioRun Solution example
      description: Brewery ScenarioRun ran with Solution information example
      value:
        id: "1"
        workflowId: "1"
        workflowName: "w1"
        ownerId: "1"
        solutionId: "1"
        solutionName: Brewery Solution
        solutionVersion: "1.0.0"
        runTemplateId: hundred
        runTemplateName: Full scenariorun 100 steps
        computeSize: highcpu
        parametersHandler: run_templates/hundred/parameters_handler/
        datasetValidator: run_templates/hundred/validator/
        engine: run_templates/hundred/engine/
        datasetList:
          - "1"
        parametersValues:
          - parameterId: prefix
            varType: string
            value: new
        sendInputToDataWarehouse: true
        dataWarehouseDB: Brewery
        resultsEventBusResourceUri: brewery
        scenariorunEventBusResourceUri: brewery-scenariorun
        state: Running
        startTime: 4/15/2021, 10:52:18.593 AM
        nodeLabel: highcpupool
        fetchDatasetContainers:
          - id: azertyuiop
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
              ADT_QUERY: SELECT * FROM digitaltwins
              CSM_DATASET_PATH: /mnt/scenariorun-data
            image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
            name: fetchDatasetContainers
        fetchScenarioParametersContainer:
          id: aqwzsx
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_SCENARIO_ID: "1"
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
          image: csmphoenix.azurecr.io/cosmotech-scenario-parameters-loader:latest
        applyParametersContainer:
          id: yhnujki
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_PARAMETERS_HANDLER_PROVIDER: local
            CSM_PARAMETERS_HANDLER_PATH: run_templates/hundred/parameters_handler/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_CONTAINER_MODE: handle-parameters
          image: twinengines.azurecr.io/brewery_simulator:latest
          entrypoint: entrypoint.py
        validateDataContainer:
          id: rfvtgb
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_VALIDATOR_PROVIDER: local
            CSM_DATASET_VALIDATOR_PATH: run_templates/hundred/validator/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_CONTAINER_MODE: validate
          image: twinengines.azurecr.io/brewery_simulator:latest
          entrypoint: entrypoint.py
        sendDataWarehouseContainer:
          id: qsdfghjklm
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
            CSM_SEND_DATAWAREHOUSE_DATASETS: true
            ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
            ADX_DATABASE: Brewery
          image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
        runContainer:
          id: wxcvbn
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_ENGINE_PROVIDER: local
            CSM_ENGINE_PATH: run_templates/hundred/engine/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
            CSM_PROBES_MEASURES_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery
            CSM_CONTAINER_MODE: engine
            CSM_SIMULATION: DeployedScenarioRun
          image: twinengines.azurecr.io/brewery_simulator:latest
          entrypoint: entrypoint.py
    BreweryScenarioRunContainer:
      summary: Brewery ScenarioRun Containers example
      description: Brewery ScenarioRun ran with containers information example
      value:
        id: "1"
        workflowId: "1"
        workflowName: "w1"
        ownerId: "1"
        state: Running
        startTime: 4/15/2021, 10:52:18.593 AM
        nodeLabel: highcpupool
        fetchDatasetContainers:
          - id: azertyuiop
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
              ADT_QUERY: SELECT * FROM digitaltwins
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
            name: fetchDatasetContainers
        sendDataWarehouseContainer:
          id: qsdfghjklm
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
            CSM_SEND_DATAWAREHOUSE_DATASETS: true
            ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
            ADX_DATABASE: Brewery
          image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
        runContainer:
          id: wxcvbn
          envVars:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: azertyuiop
            CSM_API_URL: https://api.comostech.com
            CSM_API_TOKEN: azertyuiopqsdfghjklm
            CSM_ENGINE_PROVIDER: local
            CSM_ENGINE_PATH: run_templates/hundred/engine/
            CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
            CSM_PROBES_MEASURES_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery
            CSM_CONTAINER_MODE: engine
            CSM_SIMULATION: DeployedScenarioRun
          image: twinengines.azurecr.io/brewery_simulator:latest
          entrypoint: entrypoint.py
    OneScenarioRun:
      summary: Brewery ScenarioRun list example
      description: Brewery ScenarioRun list example
      value:
        - id: "1"
          workflowId: "1"
          workflowName: "w1"
          ownerId: "1"
          workspaceId: "1"
          workspaceName: Brewery Analysis
          scenarioId: "1"
          scenarioName: Brewery Master Analysis
          solutionId: "1"
          solutionName: Brewery Solution
          solutionVersion: "1.0.0"
          runTemplateId: hundred
          runTemplateName: Full scenariorun 100 steps
          computeSize: highcpu
          state: Running
          startTime: 4/15/2021, 10:52:18.593 AM
          nodeLabel: highcpupool
          fetchDatasetContainers:
            - id: azertyuiop
              envVars:
                AZURE_TENANT_ID: "12345678"
                AZURE_CLIENT_ID: "12345678"
                AZURE_CLIENT_SECRET: azertyuiop
                CSM_API_URL: https://api.comostech.com
                CSM_API_TOKEN: azertyuiopqsdfghjklm
                ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
                ADT_QUERY: SELECT * FROM digitaltwins
                CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
              image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
              name: fetchDatasetContainers
          fetchScenarioParametersContainer:
            id: aqwzsx
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              CSM_SCENARIO_ID: "1"
              CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
            image: csmphoenix.azurecr.io/cosmotech-scenario-parameters-loader:latest
          applyParametersContainer:
            id: yhnujki
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              CSM_PARAMETERS_HANDLER_PROVIDER: local
              CSM_PARAMETERS_HANDLER_PATH: run_templates/hundred/parameters_handler/
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
              CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
              CSM_CONTAINER_MODE: handle-parameters
            image: twinengines.azurecr.io/brewery_simulator:latest
            entrypoint: entrypoint.py
          validateDataContainer:
            id: rfvtgb
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              CSM_DATASET_VALIDATOR_PROVIDER: local
              CSM_DATASET_VALIDATOR_PATH: run_templates/hundred/validator/
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
              CSM_CONTAINER_MODE: validate
            image: twinengines.azurecr.io/brewery_simulator:latest
            entrypoint: entrypoint.py
          sendDataWarehouseContainer:
            id: qsdfghjklm
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
              CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
              CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
              CSM_SEND_DATAWAREHOUSE_DATASETS: true
              ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
              ADX_DATABASE: Brewery
            image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
          runContainer:
            id: wxcvbn
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              CSM_ENGINE_PROVIDER: local
              CSM_ENGINE_PATH: run_templates/hundred/engine/
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
              CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
              CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
              CSM_PROBES_MEASURES_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery
              CSM_CONTAINER_MODE: engine
              CSM_SIMULATION: DeployedScenarioRun
            image: twinengines.azurecr.io/brewery_simulator:latest
            entrypoint: entrypoint.py
    BrewerySearch:
      summary: Brewery search ScenarioRun example
      description: Brewery search ScenarioRun of Workspace 1 in Running state example
      value:
        workspaceId: "1"
        state: "Running"
    BreweryScenarioRunStartContainers:
      summary: Brewery start ScenarioRun directly with containers example
      description: Brewery start ScenarioRun directly with containers example
      value:
        generateName: workflow-
        nodeLabel: highcpupool
        containers:
          fetchDatasetContainers:
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              ADT_INSTANCE_URL: https://supply.api.weu.digitaltwins.azure.net
              ADT_QUERY: SELECT * FROM digitaltwins
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
            image: csmphoenix.azurecr.io/azure-digital-twins-simulator-connector:latest
            name: fetchDatasetContainers
          sendDataWarehouseContainer:
            name: qsdfghjklm
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
              CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
              CSM_SEND_DATAWAREHOUSE_PARAMETERS: true
              CSM_SEND_DATAWAREHOUSE_DATASETS: true
              ADX_DATA_INGESTION_URI: https://ingest-phoenix.westeurope.kusto.windows.net
              ADX_DATABASE: Brewery
            image: csmphoenix.azurecr.io/azure-data-explorer-scenariorun-sender:latest
          runContainer:
            name: wxcvbn
            envVars:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: azertyuiop
              CSM_API_URL: https://api.comostech.com
              CSM_API_TOKEN: azertyuiopqsdfghjklm
              CSM_ENGINE_PROVIDER: local
              CSM_ENGINE_PATH: run_templates/hundred/engine/
              CSM_DATASET_ABSOLUTE_PATH: /mnt/scenariorun-data
              CSM_PARAMETERS_ABSOLUTE_PATH: /mnt/scenariorun-parameters
              CSM_CONTROL_PLANE_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery-scenariorun
              CSM_PROBES_MEASURES_TOPIC: amqps://csm-phoenix.servicebus.windows.net/brewery
              CSM_CONTAINER_MODE: engine
              CSM_SIMULATION: DeployedScenarioRun
            image: twinengines.azurecr.io/brewery_simulator:latest
            entrypoint: entrypoint.py
    BreweryScenarioRunLogs:
      summary: Brewery ScenarioRun logs  example
      description: Brewery ScenarioRun logs with plain text example
      value:
        scenariorunId: "1"
        containers: 
          fetchDatasetContainers:
            nodeId: azertyuiop-123
            containerName: azertyuiop
            children:
              - wxcvbn
            logs: cannot read source file
          runLogs:
            nodeid: wxcvbn-123
            containerName: wxcvbn
            logs: cannot run solution
