@startuml

title Cosmo Tech Platform API Schemas Diagram

entity ComponentRolePermissions {
    component: String
    roles: Map
}

entity Connector {
    id: String
    * key: String
    * name: String
    description: String
    * repository: String
    * version: String
    tags: List<String>
    ownerId: String
    url: String
    azureManagedIdentity: Boolean
    azureAuthenticationWithCustomerAppRegistration: Boolean
    * ioTypes: List<String>
    parameterGroups: List<ConnectorParameterGroup>
}

entity ConnectorParameter {
    * id: String
    * label: String
    valueType: String
    options: List<String>
    default: String
    envVar: String
}

entity ConnectorParameterGroup {
    * id: String
    * label: String
    * parameters: List<ConnectorParameter>
}

entity ContainerResourceSizeInfo {
    * cpu: String
    * memory: String
}

entity ContainerResourceSizing {
    * requests: ContainerResourceSizeInfo
    * limits: ContainerResourceSizeInfo
}

entity Dataset {
    id: String
    name: String
    description: String
    ownerId: String
    organizationId: String
    tags: List<String>
    connector: DatasetConnector
    fragmentsIds: List<String>
    validatorId: String
    compatibility: List<DatasetCompatibility>
}

entity DatasetCompatibility {
    * solutionKey: String
    minimumVersion: String
    maximumVersion: String
}

entity DatasetConnector {
    id: String
    name: String
    version: String
    parametersValues: Map
}

entity DatasetCopyParameters {
    sourceId: String
    targetId: String
    options: Map
}

entity DatasetSearch {
    * datasetTags: List<String>
}

entity DeleteHistoricalData {
    * enable: Boolean
    pollFrequency: Integer
    timeOut: Integer
}

entity Organization {
    id: String
    name: String
    ownerId: String
    services: OrganizationServices
    security: OrganizationSecurity
}

entity OrganizationAccessControl {
    * id: String
    * role: String
}

entity OrganizationRole {
    * role: String
}

entity OrganizationSecurity {
    * default: String
    * accessControlList: List<OrganizationAccessControl>
}

entity OrganizationService {
    cloudService: String
    baseUri: String
    platformService: String
    resourceUri: String
    credentials: Map
}

entity OrganizationServices {
    tenantCredentials: Map
    storage: OrganizationService
    solutionsContainerRegistry: OrganizationService
}

entity ResourceSizeInfo {
    * cpu: String
    * memory: String
}

entity RunTemplate {
    * id: String
    name: String
    description: String
    csmSimulation: String
    tags: List<String>
    computeSize: String
    runSizing: RunTemplateResourceSizing
    noDataIngestionState: Boolean
    fetchDatasets: Boolean
    scenarioDataDownloadTransform: Boolean
    fetchScenarioParameters: Boolean
    applyParameters: Boolean
    validateData: Boolean
    sendDatasetsToDataWarehouse: Boolean
    sendInputParametersToDataWarehouse: Boolean
    preRun: Boolean
    run: Boolean
    postRun: Boolean
    parametersJson: Boolean
    parametersHandlerSource: RunTemplateStepSource
    datasetValidatorSource: RunTemplateStepSource
    preRunSource: RunTemplateStepSource
    runSource: RunTemplateStepSource
    postRunSource: RunTemplateStepSource
    scenariodataTransformSource: RunTemplateStepSource
    parameterGroups: List<String>
    stackSteps: Boolean
    gitRepositoryUrl: String
    gitBranchName: String
    runTemplateSourceDir: String
    executionTimeout: Integer
    deleteHistoricalData: DeleteHistoricalData
}

entity RunTemplateHandlerId {
}

entity RunTemplateParameter {
    * id: String
    labels: Map
    varType: String
    defaultValue: String
    minValue: String
    maxValue: String
    regexValidation: String
    options: Map
}

entity RunTemplateParameterGroup {
    * id: String
    labels: Map
    isTable: Boolean
    options: Map
    parentId: String
    parameters: List<String>
}

entity RunTemplateParameterValue {
    * parameterId: String
    varType: String
    * value: String
}

entity RunTemplateResourceSizing {
    * requests: ResourceSizeInfo
    * limits: ResourceSizeInfo
}

entity RunTemplateStepSource {
}

entity Scenario {
    id: String
    name: String
    description: String
    tags: List<String>
    parentId: String
    ownerId: String
    rootId: String
    solutionId: String
    runTemplateId: String
    workspaceId: String
    state: ScenarioJobState
    creationDate: Date
    lastUpdate: Date
    ownerName: String
    solutionName: String
    runTemplateName: String
    datasetList: List<String>
    runSizing: ScenarioResourceSizing
    parametersValues: List<ScenarioRunTemplateParameterValue>
    lastRun: ScenarioLastRun
    parentLastRun: ScenarioLastRun
    rootLastRun: ScenarioLastRun
    validationStatus: ScenarioValidationStatus
    security: ScenarioSecurity
}

entity ScenarioAccessControl {
    * id: String
    * role: String
}

entity ScenarioChangedParameterValue {
    parameterId: String
    varType: String
    value: String
    comparedValue: String
}

entity ScenarioComparisonResult {
    scenarioId: String
    comparedScenarioId: String
    changedValues: List<ScenarioChangedParameterValue>
}

entity ScenarioDataDownloadInfo {
    url: String
    state: ScenarioJobState
}

entity ScenarioDataDownloadJob {
    id: String
}

entity ScenarioJobState {
}

entity ScenarioLastRun {
    scenarioRunId: String
    csmSimulationRun: String
    workflowId: String
    workflowName: String
}

entity ScenarioResourceSizing {
    * requests: ResourceSizeInfo
    * limits: ResourceSizeInfo
}

entity ScenarioRole {
    * role: String
}

entity ScenarioRun {
    id: String
    state: ScenarioRunState
    organizationId: String
    workflowId: String
    csmSimulationRun: String
    generateName: String
    workflowName: String
    ownerId: String
    workspaceId: String
    workspaceKey: String
    scenarioId: String
    solutionId: String
    runTemplateId: String
    computeSize: String
    sdkVersion: String
    noDataIngestionState: Boolean
    datasetList: List<String>
    parametersValues: List<RunTemplateParameterValue>
    sendDatasetsToDataWarehouse: Boolean
    sendInputParametersToDataWarehouse: Boolean
    nodeLabel: String
    containers: List<ScenarioRunContainer>
}

entity ScenarioRunContainer {
    id: String
    * name: String
    labels: Map
    envVars: Map
    * image: String
    entrypoint: String
    runArgs: List<String>
    dependencies: List<String>
    solutionContainer: Boolean
    nodeLabel: String
    runSizing: ContainerResourceSizing
    artifacts: List<ScenarioRunContainerArtifact>
}

entity ScenarioRunContainerArtifact {
    name: String
    path: String
}

entity ScenarioRunContainerLogs {
    nodeId: String
    containerName: String
    children: List<String>
    logs: String
}

entity ScenarioRunLogs {
    scenariorunId: String
    containers: Map
}

entity ScenarioRunSearch {
    solutionId: String
    runTemplateId: String
    workspaceId: String
    scenarioId: String
    state: String
    workflowId: String
    workflowName: String
    ownerId: String
}

entity ScenarioRunStartContainers {
    generateName: String
    * csmSimulationId: String
    nodeLabel: String
    labels: Map
    * containers: List<ScenarioRunContainer>
}

entity ScenarioRunState {
}

entity ScenarioRunStatus {
    id: String
    organizationId: String
    workflowId: String
    workflowName: String
    startTime: String
    endTime: String
    phase: String
    progress: String
    message: String
    estimatedDuration: Integer
    nodes: List<ScenarioRunStatusNode>
    state: ScenarioRunState
}

entity ScenarioRunStatusNode {
    id: String
    name: String
    containerName: String
    estimatedDuration: Integer
    hostNodeName: String
    message: String
    phase: String
    progress: String
    startTime: String
    endTime: String
}

entity ScenarioRunTemplateParameterValue {
    * parameterId: String
    varType: String
    * value: String
    isInherited: Boolean
}

entity ScenarioSecurity {
    * default: String
    * accessControlList: List<ScenarioAccessControl>
}

entity ScenarioValidationStatus {
}

entity Solution {
    id: String
    key: String
    name: String
    description: String
    repository: String
    csmSimulator: String
    version: String
    ownerId: String
    sdkVersion: String
    url: String
    tags: List<String>
    parameters: List<RunTemplateParameter>
    parameterGroups: List<RunTemplateParameterGroup>
    runTemplates: List<RunTemplate>
}

entity SourceInfo {
    name: String
    * location: String
    path: String
    * type: String
}

entity TwinGraphImport {
    * source: SourceInfo
    * graphId: String
    version: String
}

entity TwinGraphImportInfo {
    jobId: String
    graphName: String
}

entity TwinGraphQuery {
    version: String
    * query: String
}

entity Validator {
    * id: String
    * name: String
    description: String
    * repository: String
    * version: String
    ownerId: String
    url: String
    tags: List<String>
}

entity ValidatorRun {
    id: String
    validatorId: String
    validatorName: String
    * datasetId: String
    datasetName: String
    state: String
    containerId: String
    logs: String
}

entity Workspace {
    id: String
    * key: String
    * name: String
    description: String
    version: String
    tags: List<String>
    ownerId: String
    * solution: WorkspaceSolution
    webApp: WorkspaceWebApp
    sendInputToDataWarehouse: Boolean
    useDedicatedEventHubNamespace: Boolean
    dedicatedEventHubSasKeyName: String
    dedicatedEventHubAuthenticationStrategy: String
    sendScenarioRunToEventHub: Boolean
    sendScenarioMetadataToEventHub: Boolean
    security: WorkspaceSecurity
}

entity WorkspaceAccessControl {
    * id: String
    * role: String
}

entity WorkspaceFile {
    fileName: String
}

entity WorkspaceRole {
    * role: String
}

entity WorkspaceSecret {
    dedicatedEventHubKey: String
}

entity WorkspaceSecurity {
    * default: String
    * accessControlList: List<WorkspaceAccessControl>
}

entity WorkspaceSolution {
    solutionId: String
    runTemplateFilter: List<String>
    defaultRunTemplateDataset: Map
}

entity WorkspaceWebApp {
    * url: String
    iframes: Map
    options: Map
}


RunTemplateResourceSizing -- ResourceSizeInfo : requests
RunTemplateResourceSizing -- ResourceSizeInfo : limits
ContainerResourceSizing -- ContainerResourceSizeInfo : requests
ContainerResourceSizing -- ContainerResourceSizeInfo : limits
ScenarioRunContainer -- ContainerResourceSizing : runSizing
ScenarioRunContainer -- "0..*" ScenarioRunContainerArtifact : artifacts
WorkspaceSecurity -- "0..*" WorkspaceAccessControl : accessControlList
ConnectorParameterGroup -- "0..*" ConnectorParameter : parameters
OrganizationServices -- OrganizationService : storage
OrganizationServices -- OrganizationService : solutionsContainerRegistry
Scenario -- ScenarioResourceSizing : runSizing
Scenario -- "0..*" ScenarioRunTemplateParameterValue : parametersValues
Scenario -- ScenarioLastRun : lastRun
Scenario -- ScenarioLastRun : parentLastRun
Scenario -- ScenarioLastRun : rootLastRun
Scenario -- ScenarioSecurity : security
ScenarioRun -- "0..*" RunTemplateParameterValue : parametersValues
ScenarioRun -- "0..*" ScenarioRunContainer : containers
ScenarioRunStatus -- "0..*" ScenarioRunStatusNode : nodes
Connector -- "0..*" ConnectorParameterGroup : parameterGroups
ScenarioResourceSizing -- ResourceSizeInfo : requests
ScenarioResourceSizing -- ResourceSizeInfo : limits
ScenarioSecurity -- "0..*" ScenarioAccessControl : accessControlList
Organization -- OrganizationServices : services
Organization -- OrganizationSecurity : security
RunTemplate -- RunTemplateResourceSizing : runSizing
RunTemplate -- DeleteHistoricalData : deleteHistoricalData
Solution -- "0..*" RunTemplateParameter : parameters
Solution -- "0..*" RunTemplateParameterGroup : parameterGroups
Solution -- "0..*" RunTemplate : runTemplates
ScenarioComparisonResult -- "0..*" ScenarioChangedParameterValue : changedValues
Dataset -- DatasetConnector : connector
Dataset -- "0..*" DatasetCompatibility : compatibility
TwinGraphImport -- SourceInfo : source
OrganizationSecurity -- "0..*" OrganizationAccessControl : accessControlList
ScenarioRunStartContainers -- "0..*" ScenarioRunContainer : containers
Workspace -- WorkspaceSolution : solution
Workspace -- WorkspaceWebApp : webApp
Workspace -- WorkspaceSecurity : security

@enduml