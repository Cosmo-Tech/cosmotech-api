openapi: 3.0.3

info:
  title: ""
  version: ""

security:
  - oAuth2AuthCode: []

tags:
- name: organization
  description: Organization Management

paths:
  /organizations:
    post:
      operationId: createOrganization
      tags:
        - organization
      summary: Create a new organization
      requestBody:
        description: the Organization to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateRequest'
            examples:
              NewOrganizationIn:
                $ref: '#/components/examples/NewOrganizationIn'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              NewOrganizationIn:
                $ref: '#/components/examples/NewOrganizationIn'
      responses:
        "201":
          description: the Organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              examples:
                CosmoOrganization:
                  $ref: '#/components/examples/CosmoOrganization'
        "400":
          description: Bad request
    get:
      operationId: listOrganizations
      parameters:
        - name: page
          in: query
          description: page number to query (first page is at index 0)
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: amount of result by page
          required: false
          schema:
            type: integer
      tags:
        - organization
      summary: List all Organizations
      responses:
        "200":
          description: the list of Organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
              examples:
                TwoOrganizations:
                  $ref: '#/components/examples/TwoOrganizations'

  /organizations/{organization_id}:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    get:
      operationId: getOrganization
      tags:
        - organization
      summary: Get the details of an Organization
      responses:
        "200":
          description: the Organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              examples:
                CosmoOrganization:
                  $ref: '#/components/examples/CosmoOrganization'
        "404":
          description: the Organization specified is unknown or you don't have access to it
    patch:
      operationId: updateOrganization
      tags:
        - organization
      summary: Update an Organization
      requestBody:
        description: the new Organization details. This endpoint can't be used to update security
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateRequest'
            examples:
              ChangeName:
                summary: Change Name of Organization
                description: Change the name of Organization 1 to CosmoTech Digital Twins Engine
                value:
                  name: "CosmoTech Digital Twins Engine"
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              ChangeName:
                summary: Change Name of Organization
                description: Change the name of Organization 1 to CosmoTech Digital Twins Engine
                value:
                  name: "CosmoTech Digital Twins Engine"
      responses:
        "200":
          description: the organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              examples:
                CosmoThreeUsers:
                  $ref: '#/components/examples/CosmoThreeUsers'
        "400":
          description: Bad request
        "404":
          description: the Organization specified is unknown or you don't have access to it
    delete:
      operationId: deleteOrganization
      tags:
        - organization
      summary: Delete an organization
      responses:
        "204":
          description: Request succeeded
        "404":
          description: the Organization specified is unknown or you don't have access to it

  /organizations/permissions:
    get:
      operationId: listPermissions
      tags:
        - organization
      summary: Get all permissions per components
      responses:
        "200":
          description: The security permission list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentRolePermissions'
              examples:
                permissions:
                  $ref: '#/components/examples/Permissions'

  /organizations/{organization_id}/permissions/{role}:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: role
        in: path
        description: the Role
        required: true
        schema:
          type: string
    get:
      operationId: getOrganizationPermissions
      tags:
        - organization
      summary: Get the Organization permissions by given role
      responses:
        "200":
          description: The Organization security permission list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - "read"
                  - "read_security"
                  - "create_children"

  /organizations/{organization_id}/security:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    get:
      operationId: getOrganizationSecurity
      tags:
        - organization
      summary: Get the Organization security information
      responses:
        "200":
          description: The Organization security
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSecurity'
              examples:
                OrganizationSecurity:
                  $ref: '#/components/examples/BreweryOrganizationSecurity'
        "404":
          description: the Organization specified is unknown or you don't have access to it

  /organizations/{organization_id}/security/default:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    post:
      operationId: updateOrganizationDefaultSecurity
      tags:
        - organization
      summary: Update the Organization default security
      requestBody:
        description: This change the organization default security.
                    The default security is the role assigned to any person not on the Access Control List.
                    If the default security is None, then nobody outside of the ACL can access the organization.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRole'
            examples:
              BreweryOrganizationRole:
                $ref: '#/components/examples/BreweryOrganizationRole'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              BreweryOrganizationRole:
                $ref: '#/components/examples/BreweryOrganizationRole'
      responses:
        "201":
          description: The Organization default visibility
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSecurity'
              examples:
                WriterOrganizationSecurity:
                  $ref: '#/components/examples/BreweryDefaultSecurityRoleWriter'
        "404":
          description: the Organization specified is unknown or you don't have access to it

  /organizations/{organization_id}/security/access:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    post:
      operationId: createOrganizationAccessControl
      tags:
        - organization
      summary: Add a control access to the Organization
      requestBody:
        description: the new Organization security access to add.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationAccessControl'
            examples:
              OrganizationAccess:
                $ref: '#/components/examples/BreweryOrganizationAccessControl'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              OrganizationAccess:
                $ref: '#/components/examples/BreweryOrganizationAccessControl'
      responses:
        "201":
          description: The Organization access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessControl'
              examples:
                OrganizationAccessControl:
                  $ref: '#/components/examples/BreweryOrganizationAccessControl'
        "404":
          description: the Organization specified is unknown or you don't have access to it

  /organizations/{organization_id}/security/access/{identity_id}:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: identity_id
        in: path
        description: the User identifier
        required: true
        schema:
          type: string
    get:
      operationId: getOrganizationAccessControl
      tags:
        - organization
      summary: Get a control access for the Organization
      responses:
        "200":
          description: The Organization access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessControl'
              examples:
                OrganizationAccessControl:
                  $ref: '#/components/examples/BreweryOrganizationAccessControl'
        "404":
          description: The Organization or user specified is unknown or you don't have access to it
    patch:
      operationId: updateOrganizationAccessControl
      tags:
        - organization
      summary: Update the specified access to User for an Organization
      requestBody:
        description: The new Organization Access Control
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRole'
            examples:
              BreweryOrganizationRole:
                $ref: '#/components/examples/BreweryOrganizationRole'
      responses:
        "200":
          description: The Organization access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAccessControl'
              examples:
                OrganizationAccessControl:
                  $ref: '#/components/examples/BreweryOrganizationAccessControl'
        "404":
          description: The Organization specified is unknown or you don't have access to it
    delete:
      operationId: deleteOrganizationAccessControl
      tags:
        - organization
      summary: Remove the specified access from the given Organization
      responses:
        "204":
          description: Request succeeded
        "404":
          description: the Organization or the user specified is unknown or you don't have access to them

  /organizations/{organization_id}/security/users:
    parameters:
      - name: organization_id
        in: path
        description: The Organization identifier
        required: true
        schema:
          type: string
    get:
      operationId: listOrganizationSecurityUsers
      tags:
        - organization
      summary: Get the Organization security users list
      responses:
        "200":
          description: The Organization security users list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - alice@mycompany.com
                  - bob@mycompany.com
        "404":
          description: the Organization specified is unknown or you don't have access to it

components:
  securitySchemes:
    oAuth2AuthCode:
      type: oauth2
      description: OAuth2 authentication
      flows:
        authorizationCode:
          authorizationUrl: "https://example.com/authorize"
          tokenUrl: "https://example.com/token"
          scopes: {}
  schemas:
    # Base Organization object that includes all information
    Organization:
      type: object
      x-class-extra-annotation: "@com.redis.om.spring.annotations.Document"
      description: an Organization
      properties:
        id:
          x-field-extra-annotation: "@org.springframework.data.annotation.Id"
          type: string
          readOnly: true
          description: the Organization unique identifier
        name:
          type: string
          x-field-extra-annotation: "@com.redis.om.spring.annotations.Searchable"
          description: the Organization name
        ownerId:
          type: string
          readOnly: true
          description: the Owner User Id
        security:
          x-field-extra-annotation: "@com.redis.om.spring.annotations.Indexed"
          allOf:
            - $ref: '#/components/schemas/OrganizationSecurity'
      required:
        - id
        - name
        - ownerId
        - security

    # CRUD Operation Schemas
    OrganizationCreateRequest:
      type: object
      description: Request object for creating a new organization
      properties:
        name:
          type: string
          x-field-extra-annotation: "@com.redis.om.spring.annotations.Searchable"
          description: the Organization name
        security:
          $ref: '#/components/schemas/OrganizationSecurity'
      required:
        - name

    OrganizationUpdateRequest:
      type: object
      description: Request object for updating an organization
      properties:
        name:
          type: string
          description: the Organization name
      required:
        - name

    # Security Operation Schemas
    OrganizationSecurity:
      type: object
      description: Response object for organization security information
      properties:
        default:
          type: string
          x-field-extra-annotation: "@com.redis.om.spring.annotations.Indexed"
          description: the role by default
        accessControlList:
          type: array
          x-field-extra-annotation: "@com.redis.om.spring.annotations.Indexed"
          description: the list which can access this Organization with detailed access control information
          items:
            $ref: '#/components/schemas/OrganizationAccessControl'
      required:
        - default
        - accessControlList

    OrganizationAccessControl:
      type: object
      description: Response object for organization access control
      properties:
        id:
          type: string
          x-field-extra-annotation: "@com.redis.om.spring.annotations.Indexed"
          description: the identity id
        role:
          type: string
          x-field-extra-annotation: "@com.redis.om.spring.annotations.Indexed"
          description: a role
      required:
        - id
        - role

    OrganizationRole:
      type: object
      description: the Organization Role
      properties:
        role:
          type: string
          description: the Organization Role
      required:
        - role

    ComponentRolePermissions:
      type: object
      description: a RBAC by component
      properties:
        component:
          type: string
        roles:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
        - component
        - roles

  examples:
    NewOrganizationIn:
      summary: Create a new organization
      description: Create a new organization with 2 users
      value:
        name: Cosmo Tech
        security:
          default: reader
          accessControlList:
            - id: "jane.doe@cosmotech.com"
              role: "editor"
            - id: "john.doe@cosmotech.com"
              role: "viewer"
    CosmoOrganization:
      summary: Cosmo Tech Organization example
      description: Cosmo Tech Organization example
      value:
        id: "1"
        name: Cosmo Tech
        ownerId: "1"
        security:
          default: reader
          accessControlList:
            - id: "jane.doe@cosmotech.com"
              role: "editor"
            - id: "john.doe@cosmotech.com"
              role: "viewer"
    BreweryOrganizationSecurity:
      summary: Brewery Organization security
      description: Brewery Organization security example
      value:
        default: "viewer"
        accessControlList:
          - id: "bob@mycosmocompany.com"
            role: "editor"
    BreweryOrganizationAccessControl:
      summary: Update an access control.
      description: Update an access control for a user to an organization.
      value:
        id: "bob@mycompany.com"
        role: "editor"
    BreweryOrganizationRole:
      summary: Update an Organization Role.
      description: Update an role for a user to an organization.
      value:
        role: "editor"
    CosmoThreeUsers:
      summary: Cosmo Tech Organization with 3 users
      description: Cosmo Tech Organization 3 users example
      value:
        id: "1"
        name: Cosmo Tech
        security:
          default: reader
          accessControlList:
            - id: "bob.doe@cosmotech.com"
              role: "viewer"
            - id: "alice.doe@cosmotech.com"
              role: "viewer"
            - id: "xavier.doe@cosmotech.com"
              role: "editor"
    TwoOrganizations:
      summary: Two Orgnizations
      description: Two Organizations example
      value:
        - id: "1"
          name: Cosmo Tech
          ownerId: "1"
          security:
            default: reader
            accessControlList:
              - id: "bob.doe@cosmotech.com"
                role: "editor"
              - id: "alice.doe@cosmotech.com"
                role: "viewer"
        - id: "2"
          name: Phoenix
          security:
            default: rolereader
            accessControlList:
              - id: "bob.doe@cosmotech.com"
                role: "editor"
    BreweryDefaultSecurityRoleWriter:
      summary: Brewery Scenario Writer default security
      description: Brewery Scenario example
      value:
        default: "editor"
    Permissions:
      summary: Permissions
      description: Permissions for Organization
      value:
        - component: organization
          roles:
            none: []
            viewer:
              - read
              - read_security
            user:
              - read
              - read_security
              - create_children
            editor:
              - read
              - read_security
              - create_children
              - write
            admin:
              - read
              - read_security
              - create_children
              - write
              - write_security
              - delete
        - component: workspace
          roles:
            none: []
            viewer:
              - read
              - read_security
            user:
              - read
              - read_security
              - create_children
            editor:
              - read
              - read_security
              - create_children
              - write
            admin:
              - read
              - read_security
              - create_children
              - write
              - write_security
              - delete
        - component: runner
          roles:
            none: []
            viewer:
              - read
              - read_security
            editor:
              - read
              - read_security
              - launch
              - write
            validator:
              - read
              - read_security
              - launch
              - write
              - validate
            admin:
              - read
              - read_security
              - launch
              - write
              - validate
              - write_security
              - delete
