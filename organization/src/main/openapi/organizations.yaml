openapi: 3.0.3

info:
  title: Cosmo Tech Organization Manager API
  description: Cosmo Tech Organization Manager API
  version: 1.0.0

servers:
- url: 'http://localhost:8080'

security:
- ApiKeyAuth: [ ]
- AADOAuth2AuthCode: [ ]

tags:
- name: organization
  description: Organization Management

paths:
  /organizations:
    post:
      operationId: registerOrganization
      tags:
        - organization
      summary: Register a new organization
      requestBody:
        description: the Organization to register
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
            examples:
              New:
                summary: Create a new organization
                description: Create a new organization with 2 users
                value: |
                  {
                    "id"  : "NA",
                    "name": "Cosmo Tech",
                    "users": [
                      {
                        "id": "1",
                        "name": "Bob"
                      },
                      {
                        "id": "2",
                        "name": "Alice"
                      }
                    ]
                  }
      responses:
        "201":
          description: the organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              examples:
                Cosmo:
                  summary: Cosmo organization
                  description: Cosmo organisation with id 1
                  value: |
                    {
                      "id": "1",
                      "name": "Cosmo Tech",
                      "users": [
                        {
                          "id": "1",
                          "name": "Bob"
                        },
                        {
                          "id": "2",
                          "name": "Alice"
                        }
                      ]
                    }
        "400":
          description: Bad request
    get:
      operationId: findAllOrganizations
      tags:
        - organization
      summary: List all Organizations
      responses:
        "200":
          description: the organization details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
              examples:
                Two:
                  summary: Two organization
                  description: Two organization example
                  value: |
                    [
                      {
                        "id": "1",
                        "name": "Cosmo Tech",
                        "users": [
                          {
                            "id": "1",
                            "name": "Bob"
                          },
                          {
                            "id": "2",
                            "name": "Alice"
                          }
                        ]
                      },
                      {
                        "id": "2",
                        "name": "Phoenix",
                        "users": [
                          {
                            "id": "1",
                            "name": "Bob"
                          }
                        ]

                      }
                    ]

  /organizations/{organization_id}:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    get:
      operationId: findOrganizationById
      tags:
        - organization
      summary: Get the details of an organization
      responses:
        "200":
          description: the Organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              examples:
                Cosmo:
                  summary: Cosmo organization
                  description: Cosmo organisation with id 1
                  value: |
                    {
                      "id": "1",
                      "name": "Cosmo Tech",
                      "users": [
                        {
                          "id": "1",
                          "name": "Bob"
                        },
                        {
                          "id": "2",
                          "name": "Alice"
                        }
                      ]
                    }
        "404":
          description: the Organization specified is unknown or you don't have access to it
    patch:
      operationId: updateOrganization
      tags:
        - organization
      summary: Update an organization
      requestBody:
        description: the new Organization details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
            examples:
              ChangeName:
                summary: Change Name of Organization
                description: Change the name of Organization 1 to CosmoTech Digital Twins Engine
                value: |
                  {
                    "name": "CosmoTech Digital Twins Engine"
                  }
              AddUser:
                summary: Add a user
                description: Add the user Charles to organization Cosmo Tech
                value: |
                  {
                    "users": [
                      {
                        "name": "Charles"
                      }
                    ]
                  }
              RenameUser:
                summary: Rename a user
                description: Rename the user Charles to Xavier
                value: |
                  {
                    "users": [
                      {
                        "id": "3",
                        "name": "Xavier"
                      }
                    ]
                  }
              RemoveUser:
                summary: Remove a user
                description: Remove the user Charles from organization Cosmo Tech
                value: |
                  {
                    "users": [
                      {
                        "id": "1",
                        "name": "Bob"
                      },
                      {
                        "id": "2",
                        "name": "Alice"
                      }
                    ]
                  }
      responses:
        "200":
          description: the organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              examples:
                Cosmo:
                  summary: Cosmo organization
                  description: Cosmo organisation with id 1
                  value: |
                    {
                      "id": "1",
                      "name": "Cosmo Tech",
                      "users": [
                        {
                          "id": "1",
                          "name": "Bob"
                        },
                        {
                          "id": "2",
                          "name": "Alice"
                        },
                        {
                          "id": "3",
                          "name": "Xavier"
                        }
                      ]
                    }
        "400":
          description: Bad request
        "404":
          description: the Organization specified is unknown or you don't have access to it
    delete:
      operationId: unregisterOrganization
      tags:
        - organization
      summary: Unregister an organization
      responses:
        "200":
          description: the organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              examples:
                Cosmo:
                  summary: Cosmo organization
                  description: Cosmo organisation with id 1
                  value: |
                    {
                      "id": "1",
                      "name": "Cosmo Tech",
                      "users": [
                        {
                          "id": "1",
                          "name": "Bob"
                        },
                        {
                          "id": "2",
                          "name": "Alice"
                        }
                      ]
                    }
        "400":
          description: Bad request
        "404":
          description: the Organization specified is unknown or you don't have access to it

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: The Cosmo Tech API Key
      name: key
      in: query
    AADOAuth2AuthCode:
      type: oauth2
      description: Azure Active Directory authentication
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/e9641c78-d0d6-4d09-af63-168922724e7f/oauth2/v2.0/authorize
          scopes:
            http://sample.azure.cosmo-platform.com/user_impersonation: User Impersonation
  schemas:
    Organization:
      type: object
      description: an Organization
      properties:
        id:
          type: string
          description: the Organization unique identifier, in response
        name:
          type: string
          description: the Organization name
        users:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUser'
    OrganizationUser:
      type: object
      description: a User
      properties:
        id:
          type: string
          description: the User unique identifier, in response
        name:
          type: string
          description: the User name
