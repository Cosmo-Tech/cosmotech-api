openapi: 3.0.3

info:
  title: Cosmo Tech Dataset Manager API
  description: Cosmo Tech Dataset Manager API
  version: 1.0.0

servers:
- url: 'https://api.azure.cosmo-platform.com'
- url: 'http://localhost:4010'

security:
- oAuth2AuthCode: [ ]

tags:
- name: dataset
  description: Dataset Management

paths:
  /organizations/{organization_id}/datasets:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    post:
      operationId: createDataset
      tags:
        - dataset
      summary: Create a new Dataset
      requestBody:
        description: the Dataset to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
            examples:
              BreweryADT:
                $ref: '#/components/examples/BreweryADT'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              BreweryADT:
                $ref: '#/components/examples/BreweryADT'
      responses:
        "201":
          description: the dataset details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
              examples:
                BreweryADT:
                  $ref: '#/components/examples/BreweryADT'
        "400":
          description: Bad request
    get:
      operationId: findAllDatasets
      tags:
        - dataset
      summary: List all Datasets
      responses:
        "200":
          description: the list of Datasets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
              examples:
                Two:
                  $ref: '#/components/examples/TwoDatasets'
  /organizations/{organization_id}/datasets/copy:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    post:
      operationId: copyDataset
      tags:
        - dataset
      summary: Copy a Dataset to another Dataset. Source must have a read capable connector and Target a write capable connector.
      requestBody:
        description: the Dataset copy parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetCopyParameters'
            examples:
              BreweryDatasetCopyParameters:
                $ref: '#/components/examples/BreweryDatasetCopyParameters'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              BreweryDatasetCopyParameters:
                $ref: '#/components/examples/BreweryDatasetCopyParameters'
      responses:
        "201":
          description: the Dataset copy operation parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetCopyParameters'
              examples:
                BreweryADT:
                  $ref: '#/components/examples/BreweryDatasetCopyParameters'
        "400":
          description: Bad request
        "404":
          description: the Dataset specified as Source or Target is unknown or you don't have access to it
  /organizations/{organization_id}/datasets/{dataset_id}:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: dataset_id
        in: path
        description: the Dataset identifier
        required: true
        schema:
          type: string
    get:
      operationId: findDatasetById
      tags:
        - dataset
      summary: Get the details of a Dataset
      responses:
        "200":
          description: the Dataset details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
              examples:
                BreweryADT:
                  $ref: '#/components/examples/BreweryADT'
        "404":
          description: the Dataset specified is unknown or you don't have access to it
    patch:
      operationId: updateDataset
      tags:
        - dataset
      summary: Update a dataset
      requestBody:
        description: the new Dataset details.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
            examples:
              BreweryADTUpdate:
                $ref: '#/components/examples/BreweryADTUpdate'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              BreweryADTUpdate:
                $ref: '#/components/examples/BreweryADTUpdate'
      responses:
        "200":
          description: the dataset details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
              examples:
                BreweryADTUpdated:
                  $ref: '#/components/examples/BreweryADTUpdated'
        "400":
          description: Bad request
        "404":
          description: the Dataset specified is unknown or you don't have access to it
    delete:
      operationId: deleteDataset
      tags:
        - dataset
      summary: Delete a dataset
      responses:
        "204":
          description: Request successful
        "404":
          description: the Dataset specified is unknown or you don't have access to it

  /organizations/{organization_id}/datasets/{dataset_id}/compatibility:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: dataset_id
        in: path
        description: the Dataset identifier
        required: true
        schema:
          type: string
    post:
      operationId: addOrReplaceDatasetCompatibilityElements
      tags:
        - dataset
      summary: Add Dataset Compatibility elements. Any item with the same solutionKey will be overwritten
      requestBody:
        description: the Dataset Compatibility elements
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/DatasetCompatibility"
      responses:
        "201":
          description: the Dataset Compatibility elements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetCompatibility'
              examples:
                TwoDatasetCompatibility:
                  $ref: '#/components/examples/TwoDatasetCompatibility'
        "400":
          description: Bad request
        "404":
          description: the Dataset specified is unknown or you don't have access to it
    delete:
      operationId: removeAllDatasetCompatibilityElements
      tags:
        - dataset
      summary: Remove all Dataset Compatibility elements from the Dataset specified
      responses:
        "204":
          description: the operation succeeded
        "404":
          description: the Dataset specified is unknown or you don't have access to it

  /organizations/{organization_id}/datasets/validators:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
    post:
      operationId: createValidator
      tags:
        - validator
      summary: Register a new validator
      requestBody:
        description: the Validator to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Validator'
            examples:
              BreweryADTValidator:
                $ref: '#/components/examples/BreweryADTValidator'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              BreweryADTValidator:
                $ref: '#/components/examples/BreweryADTValidator'
      responses:
        "201":
          description: the validator details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
              examples:
                BreweryADTValidator:
                  $ref: '#/components/examples/BreweryADTValidator'
        "400":
          description: Bad request
    get:
      operationId: findAllValidators
      tags:
        - validator
      summary: List all Validators
      responses:
        "200":
          description: the validator details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Validator'
              examples:
                Two:
                  $ref: '#/components/examples/OneValidator'

  /organizations/{organization_id}/datasets/validators/{validator_id}:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: validator_id
        in: path
        description: the Validator identifier
        required: true
        schema:
          type: string
    get:
      operationId: findValidatorById
      tags:
        - validator
      summary: Get the details of a validator
      responses:
        "200":
          description: the Validator details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
              examples:
                BreweryADTValidator:
                  $ref: '#/components/examples/BreweryADTValidator'
        "404":
          description: the Validator specified is unknown or you don't have access to it
    delete:
      operationId: deleteValidator
      tags:
        - validator
      summary: Delete a validator
      responses:
        "204":
          description: Request succeeded
        "404":
          description: the Validator specified is unknown or you don't have access to it
  /organizations/{organization_id}/datasets/validators/{validator_id}/run:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: validator_id
        in: path
        description: the ValidatorRun identifier
        required: true
        schema:
          type: string
    post:
      operationId: runValidator
      tags:
        - validator
      summary: Run a Validator
      requestBody:
        description: the Validator to run
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatorRun'
            examples:
              BreweryADTRunValidator:
                $ref: '#/components/examples/BreweryADTRunValidator'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              BreweryADTRunValidator:
                $ref: '#/components/examples/BreweryADTRunValidator'
      responses:
        "201":
          description: the validator run details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorRun'
              examples:
                BreweryADTValidatorRun:
                  $ref: '#/components/examples/BreweryADTValidatorRun'
        "400":
          description: Bad request
  /organizations/{organization_id}/datasets/validators/{validator_id}/history:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: validator_id
        in: path
        description: the ValidatorRun identifier
        required: true
        schema:
          type: string
    post:
      operationId: createValidatorRun
      tags:
        - validator
      summary: Register a new validator run
      requestBody:
        description: the Validator Run to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatorRun'
            examples:
              BreweryADTValidatorRun:
                $ref: '#/components/examples/BreweryADTValidatorRun'
          application/yaml:
            schema:
              type: string
              format: binary
            examples:
              BreweryADTValidatorRun:
                $ref: '#/components/examples/BreweryADTValidatorRun'
      responses:
        "201":
          description: the validator run details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorRun'
              examples:
                BreweryADTValidatorRun:
                  $ref: '#/components/examples/BreweryADTValidatorRun'
        "400":
          description: Bad request
    get:
      operationId: findAllValidatorRuns
      tags:
        - validator
      summary: List all Validator Runs
      responses:
        "200":
          description: the validator run details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidatorRun'
              examples:
                Two:
                  $ref: '#/components/examples/ThreeValidatorRun'
  /organizations/{organization_id}/datasets/validators/{validator_id}/history/{validatorrun_id}:
    parameters:
      - name: organization_id
        in: path
        description: the Organization identifier
        required: true
        schema:
          type: string
      - name: validator_id
        in: path
        description: the Validator identifier
        required: true
        schema:
          type: string
      - name: validatorrun_id
        in: path
        description: the Validator Run identifier
        required: true
        schema:
          type: string
    get:
      operationId: findValidatorRunById
      tags:
        - validator
      summary: Get the details of a validator run
      responses:
        "200":
          description: the Validator Run details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorRun'
              examples:
                BreweryADTValidatorRun:
                  $ref: '#/components/examples/BreweryADTValidatorRun'
        "404":
          description: the ValidatorRun specified is unknown or you don't have access to it
    delete:
      operationId: deleteValidatorRun
      tags:
        - validator
      summary: Delete a validator run
      responses:
        "204":
          description: Request succeeded
        "404":
          description: the ValidatorRun specified is unknown or you don't have access to it
components:
  securitySchemes:
    oAuth2AuthCode:
      type: oauth2
      description: OAuth2 authentication
      flows:
        implicit:
          authorizationUrl: oauth2/authorize
          scopes: {}
  schemas:
    Dataset:
      type: object
      description: a Dataset
      properties:
        id:
          type: string
          readOnly: true
          description: the Dataset unique identifier
        name:
          type: string
          description: the Dataset name
        description:
          type: string
          description: the Dataset description
        ownerId:
          type: string
          readOnly: true
          description: the User id which own this Dataset
        tags:
          type: array
          description: the list of tags
          items:
            type: string
        connector:
          description: the Connector setup bound to a Dataset
          $ref: '#/components/schemas/DatasetConnector'
        fragmentsIds:
          type: array
          description: the list of other Datasets ids to compose as fragments
          items:
            type: string
        validatorId:
          type: string
          description: the validator id
        compatibility:
          type: array
          description: the list of compatible Solutions versions
          items:
            $ref: '#/components/schemas/DatasetCompatibility'
      required:
        - name
        - connector
    DatasetConnector:
      type: object
      description: a Connector setup
      properties:
        id:
          type: string
          description: the Connector id
        parametersValues:
          type: object
          additionalProperties: true
      required:
        - id
    DatasetCompatibility:
      type: object
      description: a Dataset compatibility constraint to a Solution version open range
      properties:
        solutionKey:
          type: string
          description: the Solution key which group Solution versions
        minimumVersion:
          type: string
          description: the Solution minimum version compatibility (version included)
        maximumVersion:
          type: string
          description: the Solution maximum version compatibility (version included)
      required:
        - solutionKey
    Validator:
      type: object
      description: a Validator to validate a Dataset
      properties:
        id:
          type: string
          readOnly: true
          description: the Validator id
        name:
          type: string
          description: the Validator name
        description:
          type: string
          description: the Validator description
        repository:
          type: string
          description: the registry repository containing the Validator image
        version:
          type: string
          description: the Validator version MAJOR.MINOR.PATCH. Must be aligned with an existing repository tag
        ownerId:
          type: string
          readOnly: true
          description: the User id which own this Validator
        url:
          type: string
          description: an optional URL link to Validator page
        tags:
          type: array
          description: the list of tags
          items:
            type: string
      required:
        - id
        - name
        - repository
        - version
    ValidatorRun:
      type: object
      description: a Validator Run
      properties:
        id:
          type: string
          readOnly: true
          description: the Validator Run id
        validatorId:
          type: string
          readOnly: true
          description: the Validator id
        validatorName:
          type: string
          readOnly: true
          description: the validator name
        datasetId:
          type: string
          description: the Dataset id to run the validator on
        datasetName:
          type: string
          readOnly: true
          description: the Dataset name
        state:
          type: string
          readOnly: true
          description: the Validator Run state
          enum: ["Running","Finished","OnError"]
        containerId:
          type: string
          readOnly: true
          description: the Validator Run container id
        logs:
          type: string
          readOnly: true
          description: the Validator Run logs
      required:
        - datasetId
    DatasetCopyParameters:
      type: object
      description: the Dataset Copy Parameters
      properties:
        sourceId:
          type: string
          description: the source Dataset id
        targetId:
          type: string
          description: the target Dataset id
        options:
          type: object
          description: freeform options to path to connectors
          additionalProperties: true
  examples:
    BreweryADT:
      summary: Brewery ADT Dataset
      description: Brewery Dataset in ADT example
      value:
        id: "1"
        name: Brewery ADT reference
        description: Brewery reference model in ADT
        tags:
          - ADT
          - Brewery
          - Reference
        connector:
          id: "1"
          name: ADT Connector
          version: "1.0.0"
          ownerId: "1"
          parametersValues:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: "12345678"
            AZURE_DIGITAL_TWINS_URL: mydt.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data
        compatibility:
          - solutionKey: Brewery Solution
            minimumVersion: "1.0.0"
    TwoDatasets:
      summary: Two Datasets example
      description: Two ADT Datasets example
      value:
        - id: "1"
          name: Brewery ADT reference
          description: Brewery reference model in ADT
          tags:
            - ADT
            - Brewery
            - Reference
          connector:
            id: "1"
            name: ADT Connector
            version: "1.0.0"
            ownerId: "1"
            parametersValues:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: "12345678"
              AZURE_DIGITAL_TWINS_URL: mydt.api.weu.digitaltwins.azure.net
              ADT_QUERY: SELECT * FROM digitaltwins
              EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data
          compatibility:
            - solutionKey: Brewery Solution
              minimumVersion: "1.0.0"
        - id: "2"
          name: Brewery ADT future
          description: Brewery future model in ADT
          tags:
            - ADT
            - Brewery
          connector:
            id: "1"
            name: ADT Connector
            version: "1.0.0"
            ownerId: "1"
            parametersValues:
              AZURE_TENANT_ID: "12345678"
              AZURE_CLIENT_ID: "12345678"
              AZURE_CLIENT_SECRET: "12345678"
              AZURE_DIGITAL_TWINS_URL: myotherdt.api.weu.digitaltwins.azure.net
              ADT_QUERY: SELECT * FROM digitaltwins
              EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data
    BreweryADTUpdate:
      summary: Brewery ADT name update example
      description: Brewery ADT reference model name update example
      value:
        name: Brewery ADT new reference
    BreweryADTUpdated:
      summary: Brewery ADT updated Dataset
      description: Brewery Dataset in ADT name updated example
      value:
        id: "1"
        name: Brewery ADT new reference
        description: Brewery reference model in ADT
        tags:
          - ADT
          - Brewery
          - Reference
        connector:
          id: "1"
          name: ADT Connector
          version: "1.0.0"
          ownerId: "1"
          parametersValues:
            AZURE_TENANT_ID: "12345678"
            AZURE_CLIENT_ID: "12345678"
            AZURE_CLIENT_SECRET: "12345678"
            AZURE_DIGITAL_TWINS_URL: mydt.api.weu.digitaltwins.azure.net
            ADT_QUERY: SELECT * FROM digitaltwins
            EXPORT_CSV_FILE_ABSOLUTE_PATH: /mnt/scenariorun-data
        compatibility:
          - solutionKey: Brewery Solution
            minimumVersion: "1.0.0"
    BreweryADTValidator:
      summary: Brewery ADT Dataset Validator
      description: a Validator for the Brewery Dataset from ADT in a Docker image
      value:
        id: "1"
        name: Brewery ADT Validator
        description: A Validator for the Brewery Dataset from ADT
        repository: brewery_adt_validator
        version: "1.0.0"
        ownerId: "1"
        url: https://github.com/brewery-adt-validator
        tags:
          - Brewery
          - ADT
    OneValidator:
      summary: Dataset Validator list
      description: a Validator list with one element
      value:
        - id: "1"
          name: Brewery ADT Validator
          description: A Validator for the Brewery Dataset from ADT
          repository: brewery_adt_validator
          version: "1.0.0"
          ownerId: "1"
          url: https://github.com/brewery-adt-validator
          tags:
            - Brewery
            - ADT
    BreweryADTValidatorRun:
      summary: Brewery ADT Dataset Validator Run
      description: a Validator Run for the Brewery Dataset from ADT in a Docker image
      value:
        id: 1
        validatorId: "1"
        validatorName: Brewery ADT Validator
        datasetId: "1"
        datasetName: Brewery ADT reference
        state: Finished
        containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa7
        logs: Validation ended with success\nBrewery ADT reference OK
    ThreeValidatorRun:
      summary: Brewery ADT Dataset Validator Run list
      description: a list of Validator Run for the Brewery Dataset
      value:
        - id: "1"
          validatorId: "1"
          validatorName: Brewery ADT Validator
          datasetId: "1"
          datasetName: Brewery ADT reference
          state: Finished
          containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa7
          logs: Validation ended with success\nBrewery ADT reference OK
        - id: "2"
          validatorId: "1"
          validatorName: Brewery ADT Validator
          datasetId: "1"
          datasetName: Brewery ADT reference
          state: OnError
          containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa8
          logs: Validation ended with errors\nBrewery ADT reference KO
        - id: "3"
          validatorId: "1"
          validatorName: Brewery ADT Validator
          datasetId: "1"
          datasetName: Brewery ADT reference
          state: Running
          containerId: 387ab9ffe8361eabc24b2de516e71f9bd704d992840f53d9f365b11fdb8bcaa9
          logs: none
    BreweryADTRunValidator:
      summary: Brewery ADT Dataset Validator Run input
      description: a Validator Run input for the Brewery Dataset from ADT in a Docker image
      value:
        datasetId: "1"
    BreweryDatasetCopyParameters:
      summary: Parameters for Dataset copy example
      description: Parameters for Dataset copy from Dataset 1 to 2 example
      value:
        sourceId: "1"
        targetId: "2"

