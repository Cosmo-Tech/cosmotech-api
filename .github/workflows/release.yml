name: Release

on:
  release:
    types: [published]

jobs:

  upload_deploy_helper_script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Compute API version from tag
        id: apiVersionVar
        env:
          TAG: ${{ github.event.release.tag_name }}
        run: |
          export tagFirstPart=$(echo "${TAG}" | cut -d '.' -f1)
          if [[ $tagFirstPart == "v*" ]]; then \
            echo "::set-output name=apiVersion::${tagFirstPart}" ; \
          else \
            echo "::set-output name=apiVersion::v${tagFirstPart}" ; \
          fi

      - name: Generate deployment script
        env:
          IMAGE_TAG__: ${{ github.event.release.tag_name }}
          API_VERSION__: ${{ steps.apiVersionVar.outputs.apiVersion }}
        run: |
          export VCS_COMMIT_ID__=$(git rev-parse --short HEAD) && \
            export VCS_REF__=$(git rev-parse --abbrev-ref HEAD) && \
            envsubst '$IMAGE_TAG__ $API_VERSION__ $VCS_COMMIT_ID__ $VCS_REF__' < api/kubernetes/deploy_release.template.sh > api/kubernetes/deploy.sh
          cat api/kubernetes/deploy.sh

      - name: Upload deployment script to release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: api/kubernetes/deploy.sh
          draft: false
          overwrite: true
          tag_name: ${{ github.event.release.tag_name }}
          release_id: ${{ github.event.release.id }}

      - name: Upload undeployment script to release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: api/kubernetes/undeploy.sh
          draft: false
          overwrite: true
          tag_name: ${{ github.event.release.tag_name }}
          release_id: ${{ github.event.release.id }}

      - name: Upload upgrade script to release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: api/kubernetes/upgrade.sh
          draft: false
          overwrite: true
          tag_name: ${{ github.event.release.tag_name }}
          release_id: ${{ github.event.release.id }}
