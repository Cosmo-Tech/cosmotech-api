name: OpenAPI Clients

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main ]

jobs:
  generate_and_push_openapi_clients:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: java
            gradle_task: generateJavaClient
            repo: cosmotech-api-java-client
          - language: javascript
            gradle_task: generateJSClient
            repo: cosmotech-api-javascript-client
          - language: python
            gradle_task: generatePythonClient
            repo: cosmotech-api-python-client
          - language: csharp
            gradle_task: generateCSharpClient
            repo: cosmotech-api-csharp-client

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'

      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate Client (${{ matrix.language }})
        run: ./gradlew --info ${{ matrix.gradle_task }}

      - name: Push ${{ matrix.language }} Client to ${{ matrix.repo }}
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
        env:
          GIT_TOKEN: ${{ secrets.OPENAPI_CLIENTS_GITHUB_PAT }}
        run: |
          commits="${{ join(github.event.commits.*.message, ' _SEP_ ') }}"
          echo "commits=[${commits}]"
          IFS=' _SEP_ ' read -a commitsArray <<< "$commitMsg"
          additionalGitMessages=""
          for commit in "${commitsArray[@]}"; do
            echo "Commit messge: [$commit]"
            if [[ "$commit" != "" ]]; then
              additionalGitMessages="${additionalGitMessages} ${commit}"
            fi
          done
          export ADDITIONAL_GIT_MESSAGES="$additionalGitMessages"
          ./scripts/clients/publish_client.sh ${{ matrix.language }} ${{ github.actor }}
