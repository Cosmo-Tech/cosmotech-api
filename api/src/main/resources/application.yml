logging:
  level:
    com.cosmotech: INFO

spring:
  redis:
    host: ${csm.platform.twincache.host}
    port: 6379
    password: ${csm.platform.twincache.password}
    username: ${csm.platform.twincache.username}
    client-type: jedis
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  output:
    ansi:
      enabled: ALWAYS
  cloud:
    discovery:
      enabled: false
    kubernetes:
      enabled: false

security:
  oauth2:
    resource:
      user-info-uri:
      jwk:
        key-set-uri:

management:
  endpoint:
    health:
      show-details: always
      probes:
        # This exposes the following endpoints for Kubernetes: /actuator/health/{live,readi}ness
        enabled: true
      group:
        readiness:
          include: "readinessState,argo"
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    port: 8081

server:
  jetty:
    accesslog:
      enabled: true
      format: extended_ncsa
  servlet:
    context-path:
  forward-headers-strategy: native

csm:
  platform:
    summary: Cosmo Tech Platform
    description: Cosmo Tech Digital Twins Simulation Platform
    version: "1.0.0"
    namespace: "phoenix"
    # Commit ID and Ref have to be set in the config, but a better approach could be to
    # generate such info at build time
    commit-id: ""
    vcs-ref: ""
    rbac:
      enabled: true
    api:
      # API Base Path for OpenAPI-generated controllers.
      # Might conflict with the SpringBoot context path, hence leaving it at the root
      base-path: /
      base-url: "http://cosmotech-api-${csm.platform.api.version}:8080"
      version: latest
    id-generator:
      type: hashid
    event-publisher:
      type: in_process
    twincache:
      host: "localhost"
      port: "6379"
      username: "default_user"
      password: "default_password"
      dataset:
        # TODO: Should be way less than a thousand. See open ticket
        maxResult: 1000
      scenariorun:
        maxResult: 200
      scenario:
        maxResult: 200
    argo:
      base-uri: "https://localhost:2746"
      image-pull-secrets: []
      imagePullPolicy: IfNotPresent
      workflows:
        namespace: phoenix
        node-pool-label: ""
        service-account-name: workflow
        storage-class: null
        access-modes:
          # Any in the following list: ReadWriteOnce, ReadOnlyMany, ReadWriteMany, ReadWriteOncePod (K8s 1.22+)
          - ReadWriteOnce
        requests:
          storage: 1Gi
    images:
      scenario-fetch-parameters: cosmo-tech/fetch-scenario-parameters
    registries:
      core: coreregistry.svc.cluster.local:5000
      solutions: solutionsregistry.svc.cluster.local:5000
    containers: []
    authorization:
      principal-jwt-claim: "sub"
      tenant-id-jwt-claim: "iss"
      allowed-tenants: []
    upload:
      authorized-mime-types:
        workspaces:
          - application/zip
          - application/xml
          - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
          - application/x-tika-ooxml
          - text/csv
          - text/plain
          - text/x-yaml
          - application/json
        handlers:
          - application/zip
          - application/x-sh
          - application/json
          - text/x-python
          - text/plain
          - text/x-yaml
    vendor: cosmotech

springdoc:
  # See https://springdoc.org/#properties
  api-docs:
    path: /openapi
  pre-loading-enabled: true
  remove-broken-reference-definitions: false
  show-actuator: false
  swagger-ui:
    # Disable the swagger-ui default petstore url
    disable-swagger-default-url: true
    display-request-duration: true
    filter: true
    tags-sorter: alpha
    oauth:
      use-pkce-with-authorization-code-grant: true
  writer-with-default-pretty-printer: true

# Aliases
api:
  base-path: ${csm.platform.api.base-path}
  swagger-ui:
    base-path: ${server.servlet.context-path}
  version: ${csm.platform.api.version}
