logging:
  level:
    com.cosmotech: INFO

spring:
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  output:
    ansi:
      enabled: ALWAYS
  cloud:
    discovery:
      enabled: false
    kubernetes:
      enabled: false

security:
  oauth2:
    resource:
      user-info-uri: https://graph.microsoft.com/oidc/userinfo
      jwk:
        key-set-uri: https://login.microsoftonline.com/common/discovery/v2.0/keys

management:
  endpoint:
    health:
      probes:
        # This exposes the following endpoints for Kubernetes: /actuator/health/{live,readi}ness
        enabled: true
      group:
        readiness:
          include: "readinessState,argo"
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    port: 8081

server:
  jetty:
    accesslog:
      enabled: true
      format: extended_ncsa
  servlet:
    context-path:
  forward-headers-strategy: native

csm:
  platform:
    summary: Cosmo Tech Platform
    description: Cosmo Tech Digital Twins Simulation Platform
    version: "1.0.0"
    # Commit ID and Ref have to be set in the config, but a better approach could be to
    # generate such info at build time
    commit-id: ""
    vcs-ref: ""
    api:
      # API Base Path for OpenAPI-generated controllers.
      # Might conflict with the SpringBoot context path, hence leaving it at the root
      base-path: /
      base-url: "http://cosmotech-api-${csm.platform.api.version}:8080"
      version: latest
    id-generator:
      type: hashid
    event-publisher:
      type: in_process
    argo:
      base-uri: "https://localhost:2746"
      image-pull-secrets: []
      workflows:
        namespace: phoenix
        node-pool-label: agentpool
        service-account-name: workflow
        storage-class: null
        access-modes:
          # Any in the following list: ReadWriteOnce, ReadOnlyMany, ReadWriteMany, ReadWriteOncePod (K8s 1.22+)
          - ReadWriteOnce
        requests:
          storage: 1Gi
    images:
      scenario-fetch-parameters: cosmo-tech/fetch-scenario-parameters
      send-datawarehouse: cosmo-tech/azure-data-explorer-connector
      scenario-data-upload: cosmo-tech/azure-storage-publish:latest
    authorization:
      principal-jwt-claim: "sub"
      tenant-id-jwt-claim: "iss"
      allowed-tenants: []
    vendor: azure
    azure:
      appIdUri: "http://dev.api.cosmotech.com"
      credentials:
        # Deprecated - use csm.platform.azure.credentials.core.tenantId instead
        tenantId: ""
        # Deprecated - use csm.platform.azure.credentials.core.clientId instead
        clientId: ""
        # Deprecated - use csm.platform.azure.credentials.core.clientSecret instead
        clientSecret: ""
        # Deprecated - use csm.platform.azure.credentials.core.aadPodIdBinding instead
        aadPodIdBinding: "phoenix-pod-identity"
        core:
          tenantId: "${csm.platform.azure.credentials.tenantId}"
          clientId: "${csm.platform.azure.credentials.clientId}"
          clientSecret: "${csm.platform.azure.credentials.clientSecret}"
          aadPodIdBinding: "${csm.platform.azure.credentials.aadPodIdBinding}"
        customer:
          tenantId: null
          clientId: null
          clientSecret: null
      storage:
        baseUri: ""
        resourceUri: ""
        # Storage account name length should be between 3 and 24 and use numbers and lower-case letters only
        account-name: "[storage-account-name]"
        # Fill storage account access key copied from portal
        account-key: "[storage-account-access-key]"
        # Fill storage endpoint URL copied from portal
        blob-endpoint: "https://${csm.platform.azure.storage.account-name}.blob.core.windows.net"
        connection-string: "DefaultEndpointsProtocol=https;AccountName=${csm.platform.azure.storage.account-name};AccountKey=${csm.platform.azure.storage.account-key};EndpointSuffix=core.windows.net"
      containerRegistries:
        core: ghcr.io
        solutions: ""
      eventBus:
        baseUri: ""
        # One of 'tenant_client_credentials' or 'shared_access_policy'.
        # Due to PROD-8071, shared_access_policy is needed when the platform is deployed in a tenant
        # different from the core Platform one. This is applicable to managed applications
        # provisioned via the Azure Marketplace
        authentication:
          strategy: tenant_client_credentials
          sharedAccessPolicy:
            namespace:
              name: RootManageSharedAccessKey
              key: null
      dataWarehouseCluster:
        baseUri: ""
        options:
          ingestionUri: ""
      keyVault:
      analytics:
        resourceUri: ""
        instrumentationKey: ""
        connectionString: "InstrumentationKey=${csm.platform.azure.analytics.instrumentationKey};IngestionEndpoint=https://francecentral-0.in.applicationinsights.azure.com/"
      cosmos:
        connectionMode: ""
        consistencyLevel: ""
        core-database:
          name: phoenix-core
          connectors:
            container: connectors
          organizations:
            container: organizations
          users:
            container: users
        key: ""
        populateQueryMetrics: true
        uri: ""
    data-ingestion:
      # Number of seconds to wait after a scenario run workflow end time, before
      # starting to check ADX for data ingestion state.
      # See https://bit.ly/3FXshzE for the rationale
      waiting-time-before-ingestion-seconds: 10
      # number of minutes after a scenario run workflow end time during which an ingestion failure
      # detected is considered linked to the current scenario run
      ingestion-observation-window-to-be-considered-a-failure-minutes: 5
      state:
        # state to report if there no ingestion failure detected, and no control plane info,
        # but we have probe measures in ADX.
        # Value should be convertible to a DataIngestionState
        # (e.g., InProgress, Successful, Failure, Unknown)
        state-if-no-control-plane-info-but-probe-measures-data: Successful
        # whether to report an error if there is neither control plane info nor probe measures data in ADX
        exception-if-no-control-plane-info-and-no-probe-measures-data: true

springdoc:
  # See https://springdoc.org/#properties
  api-docs:
    path: /openapi
  pre-loading-enabled: true
  remove-broken-reference-definitions: false
  show-actuator: false
  swagger-ui:
    # Disable the swagger-ui default petstore url
    disable-swagger-default-url: true
    display-request-duration: true
    filter: true
    tags-sorter: alpha
  writer-with-default-pretty-printer: true

# Aliases
api:
  base-path: ${csm.platform.api.base-path}
  swagger-ui:
    base-path: ${server.servlet.context-path}
  version: ${csm.platform.api.version}
