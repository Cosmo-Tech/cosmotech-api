image:
  repository: localhost:5000/cosmotech-api
  pullPolicy: Always
  tag: "latest"

api:
  # A Cosmo Tech Helm Release (e.g., latest, vX) is linked to an API Version;
  # so it must define its own path rules here.
  # This corresponds to the path under which this service is exposed, if behind a reverse proxy or
  # load balancer
  servletContextPath: /cosmotech-api

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.org/client-max-body-size: "0"
  hosts:
    - host: localhost

# Resource limits are purposely removed to increase chances for charts
# to run on environments with little resources, such as Minikube or Kind.
resources: null

argo:
  storage:
    class:
      install: false

config:
  logging:
    level:
      com.cosmotech: DEBUG
  csm:
    platform:
      identityProvider:
        code: okta
        # Use to overwrite openAPI configuration
        authorizationUrl: "https://changeme/oauth2/default/v1/authorize"
        tokenUrl: "https://changeme/oauth2/default/v1/token"
        defaultScopes:
          changeme: "changeme"
        containerScopes:
          changeme: "changeme"
        # Here you can set custom user and admin groups
        # - adminGroup will have same rights that Platform.Admin
        # - userGroup will have same rights that Organization.User
        # - viewerGroup will have same rights that Organization.Viewer
        # adminGroup : "myCustomAdminGroup"
        # userGroup : "myCustomUserGroup"
        # viewerGroup : "myCustomViewerGroup"

      # Use to define Okta Configuration
      okta:
        issuer: "https://changeme/oauth2/default"
        clientId: "changeme"
        clientSecret: "changeme"
        audience: "changeme"
      argo:
        workflows:
          # Use any default storage class available
          storage-class: null
          access-modes:
            # ReadWriteMany is recommended, as we are likely to have parallel pods accessing the volume.
            # But this is not possible locally for now. See PROD-8043
            - ReadWriteOnce
          requests:
            storage: 1Gi
